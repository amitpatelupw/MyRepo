import json
import boto3

print('Loading function')

def lambda_handler(event, context):
    
    client   = boto3.client('cloudformation')
    cloudformation = boto3.resource('cloudformation')
    stackList = client.list_stacks(StackStatusFilter=['CREATE_COMPLETE'])
    #print(stackList.values())
    for v in stackList['StackSummaries']:
        
        stackName = list(v.values())[1]
        stackContainer = cloudformation.Stack(stackName)
        
        if(len(stackContainer.tags) > 0) :
            tagList = stackContainer.tags
            for tag in tagList:
                tagName = list(tag.values())[0]
                if(tagName == 'abcd') :
                    stackContainer.delete()
                    print('deleted')


Code comments

  client   = boto3.client('cloudformation')   - Create the cloudformation client
    cloudformation = boto3.resource('cloudformation') - Get cloudformation resources data
    
    stackList = client.list_stacks(StackStatusFilter=['CREATE_COMPLETE'])  - Checking the stack created in AWS having status CREATE_COMPLETE which means choose     
    the stacks which are already created without any issue
    
    #print(stackList.values())
    for v in stackList['StackSummaries']: - Now loop throught the stack details like stack name 
        
        stackName = list(v.values())[1]
        stackContainer = cloudformation.Stack(stackName) - Get the stack object 
        
        if(len(stackContainer.tags) > 0) : - check if stack has tags or not 
            tagList = stackContainer.tags   
            for tag in tagList:
                tagName = list(tag.values())[0] - retrive the tag name from stack properties
                if(tagName == 'abcd') :         - check if its matching with given tag list
                    stackContainer.delete()    - if yes delete the particular tag
                    print('deleted')
